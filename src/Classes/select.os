Перем Консоль;
Перем Заголовок;
Перем Меню;
Перем КоличествоПунктовМеню;
Перем ПозМеню;
Перем ТекПоз;
Перем ОтмеченныеПозиции;

Процедура ПриСозданииОбъекта(пЗаголовок, МассивЗначенийВыбора=Неопределено)
	
	Заголовок = пЗаголовок;

	Меню = Новый ТаблицаЗначений;
	Меню.Колонки.Добавить("Значение",      Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)));
	Меню.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная)));
	Меню.Колонки.Добавить("Отметка",       Новый ОписаниеТипов("Булево"));
	Меню.Колонки.Добавить("Доступность",   Новый ОписаниеТипов("Булево"));

	Если НЕ МассивЗначенийВыбора = Неопределено Тогда
		ПунктыМеню = СтрРазделить(МассивЗначенийВыбора, ",", Ложь);
		Для каждого Значение Из ПунктыМеню Цикл
			Стр = Меню.Добавить();
			Стр.Значение = Значение;
			Стр.Представление = Значение;
			Стр.Доступность = Истина;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#Область ПрограмныйИнтерфейс

Процедура ДобавитьЗначениеВыбора(Значение, Представление = "", НачальнаяОтметка = Ложь, Доступность = Истина) Экспорт

	НоваяСтрока = Меню.Добавить();
	НоваяСтрока.Значение = Значение;
	Если ЗначениеЗаполнено(Представление) Тогда
		НоваяСтрока.Представление = Представление;
	Иначе
		НоваяСтрока.Представление = Значение;
	КонецЕсли;
	НоваяСтрока.Отметка     = НачальнаяОтметка;
	НоваяСтрока.Доступность = Доступность;

КонецПроцедуры

// Добавить список для выбора с учетом представлений и пометок из списка
//
// Параметры:
//   Список - СписокЗначений - список, элементы которого будут добавлены к меню
//
Процедура ДобавитьСписокДляВыбора(Знач Список) Экспорт

	Для каждого Элемент Из Список Цикл

		ДобавитьЗначениеВыбора(Элемент.Значение, Элемент.Представление, Элемент.Пометка);

	КонецЦикла;

КонецПроцедуры

Функция Выбрать(МультиВыбор=Истина) Экспорт

	Если НЕ ПередНачаломВыбора(МультиВыбор) Тогда
		ПослеОкончанияВыбора();
		Если МультиВыбор Тогда
			Возврат Новый Массив;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;

	// главный цикл
	Пока Истина Цикл
		Если НЕ Консоль.НажатаКлавиша Тогда
			Приостановить(100);
		Иначе
			Клавиша = Консоль.Прочитать();
			Если Клавиша = 13 Тогда // ввод
				Прервать
			ИначеЕсли Клавиша = 32 Тогда // пробел
				ИзменитьЧекбокс(МультиВыбор);
			ИначеЕсли Клавиша = 38 Тогда // вверх
				УстановитьКурсор(-1);
			ИначеЕсли Клавиша = 40 Тогда // вниз
				УстановитьКурсор(1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ПослеОкончанияВыбора();
	
	Если МультиВыбор Тогда
		
		// возвращаем Массив выбранных значений
		Массив = Новый Массив;
		Для каждого Стр Из Меню Цикл
			Если Стр.Отметка Тогда
				Массив.Добавить(Стр.Значение);
			КонецЕсли;
		КонецЦикла;

		Возврат Массив;

	Иначе

		// возвращаем выбранное значение
		
		ВыбранноеЗначение = Неопределено;
		
		Для каждого Стр Из Меню Цикл
			Если Стр.Отметка Тогда
				ВыбранноеЗначение = Стр.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Возврат ВыбранноеЗначение;

	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция ПередНачаломВыбора(МультиВыбор)

	Консоль = Новый Консоль();
	Консоль.ВидимостьКурсора(Ложь);
	Консоль.ВывестиСтроку(Заголовок);

	КоличествоПунктовМеню = Меню.Количество();

	Если НЕ МультиВыбор Тогда
		//Оставим только первую установленную начальную отметку, если она есть
		ПерваяОтметкаНайдена = Ложь;
		Для каждого Стр Из Меню Цикл
			Если Стр.Отметка Тогда
				Если ПерваяОтметкаНайдена Тогда
					Стр.Отметка = Ложь;
				Иначе
					ПерваяОтметкаНайдена = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	// вывод меню
	Шаблон = " (%1) %2";
	Для каждого Стр Из Меню Цикл
		Консоль.ВывестиСтроку(СтрШаблон(Шаблон, ПредставлениеОтметки(Стр.Отметка), Стр.Представление));
	КонецЦикла;

	ПозМеню = Консоль.КурсорВерх; // позиция курсора после вывода меню
	ТекПоз = 1 + КоличествоПунктовМеню; // текущее значение
	Попытка
		// смещение в начало списка при инициализации - это проверка окна консоли
		УстановитьКурсор(-КоличествоПунктовМеню);
		Возврат Истина;
	Исключение
		// если список НЕ вмещается в окно консоли, то значение вертикальной координаты будет отрицательным,
		// Внешнее исключение (System.ArgumentOutOfRangeException): Значение должно быть больше или равно нулю и меньше, чем размер буфера в данной размерности. 
		// намеренно не выбрасывается исключение, т.к. требуется восстанавливать видимость курсора консоли
		Консоль.КурсорЛево = 0;
		Сообщить("ОШИБКА: Список выбора не вмещается в окно консоли ! 
				|Попробуйте увеличить окно или ограничить список выбора...");
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ПослеОкончанияВыбора()

	// сместиться в конец меню из текущей позиции
	Консоль.КурсорВерх = ПозМеню;
	Консоль.КурсорЛево = 0;
	Консоль.ВидимостьКурсора(Истина);
	
КонецПроцедуры
Процедура ИзменитьЧекбокс(МультиВыбор)

	Стр = Меню[ТекПоз-1];
	Если НЕ Стр.Доступность Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ МультиВыбор Тогда
		УстановленноеЗначениеПоз = Неопределено;
		Для Поз = 1 По Меню.Количество() Цикл
			Стр = Меню[Поз-1];
			Если Поз = ТекПоз Тогда 
				// позволяет снимать текущую отметку интерактивно 
				Продолжить;
			КонецЕсли;
			Если Стр.Отметка Тогда
				УстановленноеЗначениеПоз = Поз;
				Стр.Отметка = Ложь;
				Прервать; // только одно значение установлено
			КонецЕсли;
		КонецЦикла;

		Если НЕ УстановленноеЗначениеПоз = Неопределено Тогда
			// уберем старую отметку
			Консоль.КурсорЛево = ГоризонтальнаяПозицияОтметки();
			Консоль.КурсорВерх = ВертикальнаяПозицияОтметки(УстановленноеЗначениеПоз);
			Консоль.Вывести(" ");
			Консоль.КурсорЛево = ГоризонтальнаяПозицияОтметки();
			Консоль.КурсорВерх = ВертикальнаяПозицияОтметки(ТекПоз);
		КонецЕсли;

	КонецЕсли;

	НовоеЗначение = НЕ Меню[ТекПоз-1].Отметка;
	Меню[ТекПоз-1].Отметка = НовоеЗначение;

	Консоль.КурсорЛево = ГоризонтальнаяПозицияОтметки();
	Консоль.Вывести(ПредставлениеОтметки(НовоеЗначение));

КонецПроцедуры

Процедура УстановитьКурсор(Смещение)
	
	Если Смещение = 1 И ТекПоз = КоличествоПунктовМеню Тогда
		Возврат;
	ИначеЕсли Смещение = -1 И ТекПоз = 1 Тогда
		Возврат;
	КонецЕсли;

	ТекПоз = ТекПоз + Смещение;
	
	Консоль.КурсорЛево = 0;
	Консоль.Вывести(" ");

	Консоль.КурсорВерх = ВертикальнаяПозицияОтметки(ТекПоз);

	Консоль.КурсорЛево = 0;
	Консоль.Вывести(">");

КонецПроцедуры 

Функция ГоризонтальнаяПозицияОтметки()
	Возврат 2;
КонецФункции

Функция ВертикальнаяПозицияОтметки(НомерЗначенияВСписке)
	Возврат ПозМеню - КоличествоПунктовМеню + НомерЗначенияВСписке - 1;
КонецФункции

Функция ПредставлениеОтметки(Значение)
	Возврат ?(Значение, "*", " ");
КонецФункции

#КонецОбласти
